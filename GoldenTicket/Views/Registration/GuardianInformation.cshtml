@model GoldenTicket.Models.Applicant

@{
    ViewBag.BodyId = "";
    ViewBag.BodyClass = "no-js guardian-information";
    Layout = "~/Views/Shared/_RegistrationLayout.cshtml";
}
<div id="signpost">
    <div class="site-width">
        <h2>You&rsquo;re on step 2 of 4: Guardian information</h2>
        @Html.ActionLink("Go back", "StudentInformation")
    </div>
</div>
<main>
    <div class="site-width">
        <!-- CSS class of DIV if errors will be "validation-summary-errors" (Structure: div > ul > li) -->
        @Html.ValidationSummary()

        @using (Html.BeginForm())
        {

            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.ID)
            
            <section id="guardian-information">
                <h1>Guardian information</h1>
                <p>Please provide some basic information about @Model.StudentFirstName&rsquo;s primary guardian.</p>
                <fieldset class="fieldset-name">
                    <legend>Full name</legend>
                    <div class="field">
                        @Html.LabelFor(model => model.Contact1FirstName, "First")
                        @Html.TextBoxFor(model => model.Contact1FirstName)
                    </div>
                    <div class="field">
                        @Html.LabelFor(model => model.Contact1LastName, "Last")
                        @Html.TextBoxFor(model => model.Contact1LastName)
                    </div>
                </fieldset>
                <div class="field field-phone-number">
                    @Html.LabelFor(model => model.Contact1Phone, "Phone (###-###-####)")
                    @Html.TextBoxFor(model => model.Contact1Phone)
                </div>
                <div class="field field-email-address">
                    @Html.LabelFor(model => model.Contact1Email, "Email address")
                    @Html.TextBoxFor(model => model.Contact1Email)
                </div>
                <fieldset>
                    <legend>Relationship to @Model.StudentFirstName</legend>
                    <div class="field field-radiobutton">
                        <label>
                            @Html.RadioButtonFor(model => model.Contact1Relationship, "father")
                            Father
                        </label>
                    </div>
                    <div class="field field-radiobutton">
                        <label>
                            @Html.RadioButtonFor(model => model.Contact1Relationship, "mother")
                            Mother
                        </label>
                    </div>
                    <div class="field field-radiobutton">
                        <label>
                            @Html.RadioButtonFor(model => model.Contact1Relationship, "stepfather")
                            Stepfather
                        </label>
                    </div>
                    <div class="field field-radiobutton">
                        <label>
                            @Html.RadioButtonFor(model => model.Contact1Relationship, "stepmother")
                            Stepmother
                        </label>
                    </div>
                    <div class="field field-radiobutton">
                        <label>
                            @Html.RadioButtonFor(model => model.Contact1Relationship, "guardian")
                            Guardian
                        </label>
                    </div>
                    <div class="field field-radiobutton">
                        <label>
                            @Html.RadioButtonFor(model => model.Contact1Relationship, "other")
                            Other
                        </label>
                    </div>
                </fieldset>

                <h1>Alternate contact information</h1>
                <p>These fields are optional, but provide backup contact information in the event the guardian (above) can't be reached.</p>
                <fieldset class="fieldset-name">
                    <legend>Full name</legend>
                    <div class="field">
                        @Html.LabelFor(model => model.Contact2FirstName, "First")
                        @Html.TextBoxFor(model => model.Contact2FirstName)
                    </div>
                    <div class="field">
                        @Html.LabelFor(model => model.Contact2LastName, "Last")
                        @Html.TextBoxFor(model => model.Contact2LastName)
                    </div>
                </fieldset>
                <div class="field field-phone-number">
                    @Html.LabelFor(model => model.Contact2Phone, "Phone (###-###-####)")
                    @Html.TextBoxFor(model => model.Contact2Phone)
                </div>
                <div class="field field-email-address">
                    @Html.LabelFor(model => model.Contact2Email, "Email address")
                    @Html.TextBoxFor(model => model.Contact2Email)
                </div>
                <fieldset>
                    <legend>Relationship to @Model.StudentFirstName</legend>
                    <div class="field field-radiobutton">
                        <label>
                            @Html.RadioButtonFor(model => model.Contact2Relationship, "father")
                            Father
                        </label>
                    </div>
                    <div class="field field-radiobutton">
                        <label>
                            @Html.RadioButtonFor(model => model.Contact2Relationship, "mother")
                            Mother
                        </label>
                    </div>
                    <div class="field field-radiobutton">
                        <label>
                            @Html.RadioButtonFor(model => model.Contact2Relationship, "stepfather")
                            Stepfather
                        </label>
                    </div>
                    <div class="field field-radiobutton">
                        <label>
                            @Html.RadioButtonFor(model => model.Contact2Relationship, "stepmother")
                            Stepmother
                        </label>
                    </div>
                    <div class="field field-radiobutton">
                        <label>
                            @Html.RadioButtonFor(model => model.Contact2Relationship, "guardian")
                            Guardian
                        </label>
                    </div>
                    <div class="field field-radiobutton">
                        <label>
                            @Html.RadioButtonFor(model => model.Contact2Relationship, "other")
                            Other
                        </label>
                    </div>
                </fieldset>


                <h1>Household information</h1>
                <p>Please provide information about the number of people in your household and the combined income of all household members.</p>
                <div class="field field-select field-size">
                    @Html.LabelFor(model => model.HouseholdMembers, "Number of people in your household")
                    @Html.TextBoxFor(model => model.HouseholdMembers, new { @onchange = "swapIncomeEntry()"})
                </div>
                <div class="field field-select field-width-large" id="guardian-income-select">
                    <label>
                        Average monthly income (combined total of all income earning household members)
                    </label>
                    @Html.DropDownList("household-monthly-income-select", new SelectList(ViewBag.IncomeRanges, "Value", "Text"), new { @onchange = "fillIncomeTextFromSelect()" })
                </div>
                <div class="field field-select field-width-large" id="guardian-income-text" hidden>
                    <label>
                        Average monthly income
                    </label>
                    @Html.TextBoxFor(model => model.HouseholdMonthlyIncome)
                </div>
            </section>
            <footer>
                <input class="button" type="submit" value="Continue" />
            </footer>
        }
    </div>
</main>

<script type="text/javascript">
    function swapIncomeEntry() {
        var householdMembers = $("#HouseholdMembers").val();
        var guardianIncomeSelectDiv = $("#guardian-income-select");
        var guardianIncomeTextDiv = $("#guardian-income-text");

        if (householdMembers > 10) {
            guardianIncomeSelectDiv.hide();
            guardianIncomeTextDiv.show();
        }
        else {
            guardianIncomeSelectDiv.show();
            guardianIncomeTextDiv.hide();
        }
    }

    function fillIncomeTextFromSelect() {
        var incomeSelected = $("#household-monthly-income-select").val();
        $("#HouseholdMonthlyIncome").val(incomeSelected);
    }

    function loadIncomeDivs() {
        var incomeEntered = $("#HouseholdMonthlyIncome").val();

        if (incomeEntered) {
            $("#household-monthly-income-select").val(incomeEntered);
        }

        swapIncomeEntry();
    }

    $(document).ready(loadIncomeDivs());

</script>