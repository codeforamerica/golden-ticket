@using GoldenTicket.Resources
@model GoldenTicket.Models.Applicant
           
<section id="guardian-information">
    <h1>@GoldenTicketText.GuardianInformation</h1>
    <p>@string.Format(GoldenTicketText.PleaseProvideBasicInformationAbout, @Model.StudentFirstName)</p>
    <fieldset class="fieldset-name">
        <legend>@GoldenTicketText.FullName</legend>
        <div class="field">
            @Html.LabelFor(model => model.Contact1FirstName, @GoldenTicketText.First)
            @Html.TextBoxFor(model => model.Contact1FirstName)
        </div>
        <div class="field">
            @Html.LabelFor(model => model.Contact1LastName, @GoldenTicketText.Last)
            @Html.TextBoxFor(model => model.Contact1LastName)
        </div>
    </fieldset>
    <div class="field field-phone-number">
        @Html.LabelFor(model => model.Contact1Phone, @GoldenTicketText.PhoneAndFormat)
        @Html.TextBoxFor(model => model.Contact1Phone)
    </div>
    <div class="field field-email-address">
        @Html.LabelFor(model => model.Contact1Email, @GoldenTicketText.EmailAddress)
        <p class="note" id="guardian-email-address-note">@Html.Raw(string.Format(GoldenTicketText.ForEmailAssistance, ViewBag.GlobalConfig.ContactEmail, ViewBag.GlobalConfig.ContactPersonName, ViewBag.GlobalConfig.ContactPhone))</p>
        @Html.TextBoxFor(model => model.Contact1Email, new { @aria_describedby="guardian-email-address-note"})
    </div>
    <fieldset>
        <legend>@string.Format(GoldenTicketText.RelationshipToPerson, @Model.StudentFirstName)</legend>
        <div class="field field-radiobutton">
            <label>
                @Html.RadioButtonFor(model => model.Contact1Relationship, "Father")
                @GoldenTicketText.Father
            </label>
        </div>
        <div class="field field-radiobutton">
            <label>
                @Html.RadioButtonFor(model => model.Contact1Relationship, "Mother")
                @GoldenTicketText.Mother
            </label>
        </div>
        <div class="field field-radiobutton">
            <label>
                @Html.RadioButtonFor(model => model.Contact1Relationship, "Stepfather")
                @GoldenTicketText.Stepfather
            </label>
        </div>
        <div class="field field-radiobutton">
            <label>
                @Html.RadioButtonFor(model => model.Contact1Relationship, "Stepmother")
                @GoldenTicketText.Stepmother
            </label>
        </div>
        <div class="field field-radiobutton">
            <label>
                @Html.RadioButtonFor(model => model.Contact1Relationship, "Guardian")
                @GoldenTicketText.Guardian
            </label>
        </div>
        <div class="field field-radiobutton">
            <label>
                @Html.RadioButtonFor(model => model.Contact1Relationship, "Other")
                @GoldenTicketText.Other
            </label>
        </div>
    </fieldset>

    <h1>@GoldenTicketText.AlternateContactInformation</h1>
    <p>@GoldenTicketText.AlternateContactInformationInstructions</p>
    <fieldset class="fieldset-name">
        <legend>@GoldenTicketText.FullName</legend>
        <div class="field">
            @Html.LabelFor(model => model.Contact2FirstName, @GoldenTicketText.First)
            @Html.TextBoxFor(model => model.Contact2FirstName)
        </div>
        <div class="field">
            @Html.LabelFor(model => model.Contact2LastName, @GoldenTicketText.Last)
            @Html.TextBoxFor(model => model.Contact2LastName)
        </div>
    </fieldset>
    <div class="field field-phone-number">
        @Html.LabelFor(model => model.Contact2Phone, @GoldenTicketText.PhoneAndFormat)
        @Html.TextBoxFor(model => model.Contact2Phone)
    </div>
    <div class="field field-email-address">
        @Html.LabelFor(model => model.Contact2Email, @GoldenTicketText.EmailAddress)
        @Html.TextBoxFor(model => model.Contact2Email)
    </div>
    <fieldset>
        <legend>@string.Format(GoldenTicketText.RelationshipToPerson, Model.StudentFirstName)</legend>
        <div class="field field-radiobutton">
            <label>
                @Html.RadioButtonFor(model => model.Contact2Relationship, "Father")
                @GoldenTicketText.Father
            </label>
        </div>
        <div class="field field-radiobutton">
            <label>
                @Html.RadioButtonFor(model => model.Contact2Relationship, "Mother")
                @GoldenTicketText.Mother
            </label>
        </div>
        <div class="field field-radiobutton">
            <label>
                @Html.RadioButtonFor(model => model.Contact2Relationship, "Stepfather")
                @GoldenTicketText.Stepfather
            </label>
        </div>
        <div class="field field-radiobutton">
            <label>
                @Html.RadioButtonFor(model => model.Contact2Relationship, "Stepmother")
                @GoldenTicketText.Stepmother
            </label>
        </div>
        <div class="field field-radiobutton">
            <label>
                @Html.RadioButtonFor(model => model.Contact2Relationship, "Guardian")
                @GoldenTicketText.Guardian
            </label>
        </div>
        <div class="field field-radiobutton">
            <label>
                @Html.RadioButtonFor(model => model.Contact2Relationship, "Other")
                @GoldenTicketText.Other
            </label>
        </div>
    </fieldset>


    <h1>@GoldenTicketText.HouseholdInformation</h1>
    <p>@GoldenTicketText.NumberOfPeopleInHouseholdInstructions</p>
    <div class="field field-select field-size">
        @Html.LabelFor(model => model.HouseholdMembers, @GoldenTicketText.NumberOfPeopleInHousehold)
        @Html.TextBoxFor(model => model.HouseholdMembers, new { @onchange = "swapIncomeEntry()"})
    </div>
    <div class="field field-select field-width-large" id="guardian-income-select">
        <label>
            @GoldenTicketText.AverageMonthlyIncomeAndExplanation
        </label>
        @Html.DropDownList("household-monthly-income-select", new SelectList(ViewBag.IncomeRanges, "Value", "Text"), new { @onchange = "fillIncomeTextFromSelect();swapIncomeEntry();" })
    </div>
    <div class="field field-select field-width-large" id="guardian-income-text" hidden>
        <label>
            @GoldenTicketText.AverageHouseholdIncomeInstructions
        </label>
        $ @Html.TextBoxFor(model => model.HouseholdMonthlyIncome) .00
    </div>
</section>

<script type="text/javascript">

    var MAX_INCOME = @ViewBag.MaxIncome;

    function swapIncomeEntry() {
        var householdMembers = $("#HouseholdMembers").val();
        var guardianIncomeSelectDiv = $("#guardian-income-select");
        var householdMonthlyIncomeSelectValue = $("#household-monthly-income-select").val();
        var guardianIncomeTextDiv = $("#guardian-income-text");

        if (householdMembers > 10 && householdMonthlyIncomeSelectValue >= MAX_INCOME) {
            guardianIncomeTextDiv.show();
        }
        else {
            guardianIncomeSelectDiv.show();
            guardianIncomeTextDiv.hide();
        }
    }

    function fillIncomeTextFromSelect() {
        var incomeSelected = $("#household-monthly-income-select").val();
        $("#HouseholdMonthlyIncome").val(incomeSelected);
    }

    function loadIncomeDivs() {
        var incomeEntered = $("#HouseholdMonthlyIncome").val();

        if (incomeEntered && incomeEntered < MAX_INCOME) {
            $("#household-monthly-income-select").val(incomeEntered);
        }
        else if (incomeEntered && incomeEntered >= MAX_INCOME) {
            $("#household-monthly-income-select").val(MAX_INCOME);
        }


        swapIncomeEntry();
    }

    $(document).ready(loadIncomeDivs());

</script>